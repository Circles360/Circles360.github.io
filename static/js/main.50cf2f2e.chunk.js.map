{"version":3,"sources":["components/customnode1.js","components/customnode2.js","components/headernode1.js","components/positionhelper.js","components/getprerequisites.js","maps/EngineeringHonoursSoftware/map.js","components/highlightelements.js","components/teaching.js","App.js","serviceWorker.js","index.js"],"names":["style","zIndex","pointerEvents","opacity","top","memo","data","type","position","course_code","course_name","id","bottom","degree_name","positionHelper","elements","positioning_data","e","isNode","push","x","y","console","log","unselectHelper","node","unselectQueue","selectedNodes","selectedEdges","conditions","prerequisites","flat_prereqs","flat","Infinity","prereq","hasOwnProperty","unlocks","child","getElement","elementsData","require","filter","isEdge","onLoad","reactFlowInstance","fitView","nodeTypes","custom1","CustomNode1","custom2","CustomNode2","header1","HeaderNode1","BESengah","useState","setElements","width","height","onElementClick","event","element","length","current","shift","parentList","getPrerequisites","map","stroke","animated","highlightElements","nodesConnectable","minZoom","nodesDraggable","onClick","initialElements","label","source","target","Teaching","els","nodeColor","n","concat","toString","Math","random","window","innerWidth","innerHeight","App","path","component","Component","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.50cf2f2e.chunk.js","sourcesContent":["// For normal nodes\r\nimport React, { memo } from 'react';\r\n\r\nimport { Handle } from 'react-flow-renderer';\r\n\r\nconst style = {zIndex: -9999, pointerEvents: 'none', opacity: 0, top: '50%'};\r\nexport default memo(({ data }) => {\r\n  return (\r\n    <>\r\n      <Handle type=\"target\" position=\"top\" style={style} />\r\n      <div>\r\n            <br></br>\r\n            <b>{data.course_code}</b>\r\n            <br></br>\r\n            {data.course_name}\r\n      </div>\r\n      <Handle type=\"source\" position=\"bottom\" style={style} />\r\n    </>\r\n  );\r\n});\r\n","// For grouping nodes\r\nimport React, { memo } from 'react';\r\n\r\nimport { Handle } from 'react-flow-renderer';\r\n\r\nexport default memo(({ data }) => {\r\n  return (\r\n    <>\r\n      <Handle type=\"target\" position=\"top\" style={{zIndex: -9999, pointerEvents: 'none', opacity: 0, top: '50%'}} />\r\n      <div>\r\n          <b>{data.id}</b>\r\n      </div>\r\n      <Handle type=\"source\" position=\"bottom\" style={{zIndex: -9999, pointerEvents: 'none', opacity: 0, bottom: '50%'}} />\r\n    </>\r\n  );\r\n});\r\n","import React, { memo } from 'react';\r\n\r\nimport { Handle } from 'react-flow-renderer';\r\n\r\nexport default memo(({ data }) => {\r\n  return (\r\n    <>\r\n      <Handle type=\"target\" position=\"top\" style={{opacity: 0, top: '50%'}} />\r\n      <div>\r\n            <b>{data.degree_name}</b>\r\n      </div>\r\n      <Handle type=\"source\" position=\"bottom\" style={{opacity: 0, bottom: '50%'}} />\r\n    </>\r\n  );\r\n});\r\n","import {isNode} from 'react-flow-renderer';\r\n\r\n// HELPER FUNCTION FOR POSITIONING\r\n// Prints out positions of all nodes\r\nexport default function positionHelper(elements) {\r\n    var positioning_data = [];\r\n    for (const e of elements) {\r\n        if (isNode(e)) {\r\n            positioning_data.push({\r\n                id: e.id,\r\n                position: {x: e.position.x, y: e.position.y},\r\n            });\r\n        }\r\n    }\r\n    // Write data to position output file. Note we have to do this ourselves as we\r\n    // are making a server write to a local file.\r\n    console.log('[');\r\n    for (const e of positioning_data) {\r\n        console.log('{\"id\": \"' + e.id + '\", \"position\": {\"x\": ' + e.position.x + ', \"y\": ' + e.position.y + '}},');\r\n    }\r\n    console.log(']');\r\n}","// HELPER FUNCTION to find prerequisites\r\n// Will adjust the selectedNodes and seletecdEdges dictionaries appropriately\r\nexport default function getPrerequisites(elements, node, selectedNodes, selectedEdges) {\r\n    // ==============================================\r\n    // ========== CLICKING A SELECTED NODE ==========\r\n    // ==============================================\r\n    if (selectedNodes.hasOwnProperty(node.id)) {\r\n        var unselectQueue = [node.id];\r\n\r\n        console.log(\"=====================\", selectedEdges);\r\n        // Unselect nodes and their prereqs 1 layer down. Push their selected children \r\n        // to unselect queue. Repeat process until queue is empty. This will unselect\r\n        // nodes which were previously dependant on this node. \r\n        // TODO: THAT WE NEED TO DEAL WITH \"OR\" CONDITIONS.\r\n        while (unselectQueue.length !== 0) {\r\n            var current = getElement(unselectQueue.shift(), elements);\r\n            unselectHelper(current, unselectQueue, selectedNodes, selectedEdges);\r\n        }\r\n\r\n        return;\r\n    }\r\n\r\n    // =================================================\r\n    // ========== CLICKING AN UNSELECTED NODE ==========\r\n    // =================================================\r\n    selectedNodes[node.id] = 1;\r\n\r\n    // Build a path of prerequisites until it hits a selected node\r\n    if (node.data.conditions.prerequisites === null) return;\r\n    var parentList = [];\r\n\r\n    var flat_prereqs = node.data.conditions.prerequisites.flat(Infinity);\r\n    for (var prereq of flat_prereqs) {\r\n        // Highlight this edge\r\n        selectedEdges['e' + prereq + '-' + node.id] = 1;\r\n\r\n        // Do not add to queue if the prereq is a selected node\r\n        if (selectedNodes.hasOwnProperty(prereq)) continue;\r\n        selectedNodes[prereq] = 1;\r\n\r\n        parentList.push(prereq);\r\n    }\r\n\r\n    // Keep adding prerequisites until we hit selected nodes. Go until\r\n    // parentList is empty\r\n    while (parentList.length !== 0) {\r\n        var current = getElement(parentList.shift(), elements);\r\n        \r\n        // Do not bother exploring if this node has been selected or has no prereqs\r\n        if (selectedNodes.hasOwnProperty(current)) continue;\r\n        if (current.data.conditions.prerequisites === null) continue;\r\n\r\n        var flat_prereqs = current.data.conditions.prerequisites.flat(Infinity);\r\n        for (var prereq of flat_prereqs) {\r\n            selectedEdges['e' + prereq + '-' + current.id] = 1;\r\n\r\n            // Do not add to queue if prereq is a selected node\r\n            if (selectedNodes.hasOwnProperty(prereq)) continue;\r\n            selectedNodes[prereq] = 1;\r\n\r\n            // Select the node\r\n            parentList.push(prereq);\r\n        }\r\n    }\r\n\r\n    return;\r\n}\r\n\r\n// Helper function to unselect a node. Will unhighlight all prereqs 1 layer down\r\n// Will also push selected children onto a queue\r\nconst unselectHelper = (node, unselectQueue, selectedNodes, selectedEdges) => {\r\n    delete selectedNodes[node.id]\r\n\r\n    // Unselect prereq edges 1 layer down\r\n    if (node.data.conditions.prerequisites !== null) {\r\n        var flat_prereqs = node.data.conditions.prerequisites.flat(Infinity);\r\n        for (var prereq of flat_prereqs) {\r\n            console.log(\"Checking\", 'e' + prereq + '-' + node.id);\r\n            if (selectedEdges.hasOwnProperty('e' + prereq + '-' + node.id)) {\r\n                console.log(\"SELECTED\", prereq);\r\n                delete selectedEdges['e' + prereq + '-' + node.id];\r\n            }\r\n        }\r\n    }\r\n\r\n    // Push selected unlocks onto queue\r\n    if (node.data.unlocks === null) return;\r\n    for (var child of node.data.unlocks) {\r\n        if (selectedNodes.hasOwnProperty(child)) unselectQueue.push(child);\r\n    }\r\n\r\n    return;\r\n}\r\n\r\n\r\n// Given an id, returns the element\r\nconst getElement = (id, elementsData) => {\r\n    for (var e of elementsData) {\r\n        if (e.id === id) {\r\n            return e;\r\n        }\r\n    }\r\n    return null;\r\n}","import React, {useState} from 'react';\r\nimport ReactFlow, {Controls, getConnectedEdges, isNode, isEdge, useStoreState, useStoreActions, ReactFlowProvider, EdgeText} from 'react-flow-renderer';\r\nimport CustomNode1 from '../../components/customnode1.js';\r\nimport CustomNode2 from '../../components/customnode2.js';\r\nimport HeaderNode1 from '../../components/headernode1.js';\r\n\r\nimport positionHelper from '../../components/positionhelper.js';\r\nimport selectNode from '../../components/selectnode.js';\r\nimport showPrerequisites from '../../components/showprerequisites.js';\r\nimport highlightElements from '../../components/highlightelements.js';\r\nimport getPrerequisites from '../../components/getprerequisites.js';\r\n\r\nvar elementsData = require(\"./data.json\");\r\nvar nodesData = elementsData.filter(e => isNode(e));\r\nvar edgesData = elementsData.filter(e => isEdge(e));\r\nvar selectedNodes = {\r\n    'SENGAH': 1\r\n};\r\n\r\nvar selectedEdges = {};\r\n//const eng_data = require(\"../../webscraper/engineering_degrees.json\");\r\n\r\nconsole.log(elementsData);\r\n\r\nconsole.log(\"=====SELECTED=====\");\r\nconsole.log(selectedNodes);\r\n\r\nconst onLoad = (reactFlowInstance) => {\r\n    reactFlowInstance.fitView();\r\n};\r\n\r\nconst nodeTypes = {\r\n    custom1: CustomNode1,\r\n    custom2: CustomNode2,\r\n    header1: HeaderNode1\r\n};\r\n\r\n// Given an id, get the corresponding element from the elementsData\r\nconst getElement = (id) => {\r\n    for (var e of elementsData) {\r\n        if (e.id === id) {\r\n            return e;\r\n        }\r\n    }\r\n    return null;\r\n}\r\n\r\n// Breaks down prerequisite list \r\n\r\n\r\nconst BESengah = () => {\r\n    const [elements, setElements] = useState(elementsData);\r\n\r\n    const onElementClick = (event, element) => {\r\n        console.log(\"ONELEMENTCLICK\");\r\n        if (isEdge(element)) return; // Don't care about edges\r\n\r\n        getPrerequisites(elements, element, selectedNodes, selectedEdges)\r\n        //setElements(showPrerequisites(elements, element, selectedNodes, nodesData), [, console.log(\"PREREQ CALLBACK\")]);\r\n        \r\n        //setElements(selectNode(elements, elements), [, console.log(\"SELECTED CALLBACK\")]);\r\n\r\n        setElements(highlightElements(elements, selectedNodes, selectedEdges), [, console.log(\"HIGHLIGHTED\")]);\r\n        for (var e of elements) {\r\n            if (e.id === element.id) {\r\n                e.position.x = element.position.x;\r\n                e.position.y = element.position.y;\r\n                break;\r\n            }\r\n        }\r\n    };\r\n\r\n    const highlightEdges = (element) => {\r\n        if (isEdge(element)) return;\r\n        const connectedEdges = getConnectedEdges([element], edgesData);\r\n        const connectedEdgeIds = connectedEdges.map(e => e.id);\r\n        \r\n        setElements((els) => \r\n            els.map((e) => {\r\n                //if (isEdge(e)) console.log(e.id);\r\n                if (connectedEdgeIds.includes(e.id)) {\r\n                    var stroke_colour;\r\n                    if (e.style.stroke === 'grey') return {...e, style: {...e.style, stroke: 'red', opacity: 1}, animated: true};\r\n                    else if (e.style.stroke === 'red') return {...e, style: {...e.style, stroke: 'grey', opacity: 0.2}, animated: false};\r\n                }\r\n                return e;\r\n            })\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <ReactFlowProvider>\r\n                <ReactFlow\r\n                    elements={elements}\r\n                    style={{width: '100%', height: '90vh'}}\r\n                    onLoad={onLoad}\r\n                    nodeTypes={nodeTypes}\r\n                    onElementClick={onElementClick}\r\n                    nodesConnectable={false}\r\n                    minZoom={0.1}\r\n                    //setInitTransform={TransformUpdater({x: 100, y: 100, z: 1})}\r\n                    nodesDraggable={false}\r\n                >\r\n                    <Controls />\r\n                </ReactFlow>\r\n                <button type=\"button\" onClick={positionHelper(elements)}>\r\n                    Generate position\r\n                </button>\r\n            </ReactFlowProvider>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default BESengah;","// Helper functions to highlight nodes and edges\r\n// Will highlight/unhighlight nodes based on selectedNodes dictionary\r\nimport { isEdge } from \"react-flow-renderer\";\r\n\r\nexport default function highlightElements(elements, selectedNodes, selectedEdges) {\r\n    const newElements = elements.map((e) => {\r\n        // It is an edge\r\n        if (selectedEdges.hasOwnProperty(e.id)) {\r\n            return {...e, style: {...e.style, stroke: 'red', opacity: 1}, animated: true};\r\n        } else if (isEdge(e)) {\r\n            return {...e, style: {...e.style, stroke: 'grey', opacity: 0.2}, animated: false};\r\n        }\r\n\r\n        // It is a node\r\n        if (selectedNodes.hasOwnProperty(e.id)) {\r\n            return {...e, style: {...e.style, filter: 'brightness(1.25)'}}\r\n        } else {\r\n            return {...e, style: {...e.style, filter: 'brightness(0.75)'}}\r\n        }\r\n    })\r\n\r\n    return newElements;\r\n}","import React, {useState, Fragment} from 'react';\r\nimport ReactFlow, {Background, Controls, MiniMap} from 'react-flow-renderer';\r\n\r\nvar initialElements = [\r\n    {id: '1', style: {opacity: 1}, position: {x: 0, y: 0}, data: {label: 'VINCENT'}, type: 'default'},\r\n    {id: '2', style: {opacity: 1}, position: {x: 0, y: 100}, data: {label: 'HAYES'}, type: 'default'},\r\n    {id: '3', style: {opacity: 1}, position: {x: 0, y: -100}, data: {label: 'JAMES'}, type: 'default'},\r\n    \r\n    {id: 'e1-2', source: '1', target: '2', type: 'step', animated: true}\r\n];\r\n\r\nconst onLoad = (reactFlowInstance) => {\r\n    reactFlowInstance.fitView();\r\n}\r\n\r\nconst Teaching = () => {\r\n    const [elements, setElements] = useState(initialElements);\r\n    const [isDraggable, setIsDraggable] = useState(true);\r\n\r\n    const addNode = () => {\r\n        setElements(e => e.concat({\r\n            id: (e.length+1).toString(),\r\n            data: {label: 'new node' + e.length},\r\n            position: {x: Math.random() * window.innerWidth, y: Math.random() * window.innerHeight}\r\n        }));\r\n    };\r\n    \r\n\r\n    const onClick = (event, element) => {\r\n        console.log('hi');\r\n        setElements((els) =>\r\n            els.map((e) => {\r\n                if (e.id === element.id) {\r\n                    console.log(element);    \r\n                    console.log(e.style.opacity);\r\n                    return e;\r\n                }\r\n                return e;\r\n            })\r\n        )\r\n    }\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <ReactFlow\r\n                elements={elements}\r\n                onLoad={onLoad}\r\n                style={{width: \"100%\", height: \"99vh\"}}\r\n                onElementClick={onClick}\r\n                nodesDraggable={false}\r\n            >\r\n                <Background />\r\n                <MiniMap \r\n                    nodeColor = {n=>{\r\n                        if (n.data.label === 'VINCENT') return 'red';\r\n                        return 'blue';\r\n                    }}\r\n                />\r\n                <Controls />\r\n            </ReactFlow>\r\n            <div>\r\n                <button type=\"button\" onClick={addNode}>\r\n                    ADD NEW NODE HERE!!!!\r\n                </button>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default Teaching;","import React, {Component} from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch,\r\n  Link,\r\n  Redirect\r\n} from 'react-router-dom';\r\n\r\nimport BESengah from './maps/EngineeringHonoursSoftware/map.js';\r\nimport Teaching from './components/teaching.js';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <Route path=\"/SoftwareEngineering\" component={BESengah} />\r\n        <Route path=\"/Teaching\" component={Teaching}/>\r\n      </Router>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}